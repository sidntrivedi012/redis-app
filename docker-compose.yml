services:
  app:
    build:
      dockerfile: Dockerfile
      context: .
    container_name: app
    ports:
      - "8000:8000"
      - "2112:2112"
    environment:
      - DEMO_REDIS_ADDR=redis-server:6379
      - DEMO_APP_ADDR=:8000
    # Depends on redis to start correctly.
    depends_on:
      - redis

  redis:
    image: "redis:alpine"
    command: redis-server --appendonly yes
    container_name: redis-server
    volumes:
        - ./data:/data
    ports:
        - '6379:6379'
    restart: always
    environment:
      - ALLOW_EMPTY_PASSWORD=yes

  nginx:
    image: nginx
    volumes:
      - type: bind
        source: ./nginx/nginx.conf
        target: /etc/nginx/conf.d/default.conf
      - type: bind
        source: ./nginx/certs/nginx-selfsigned.crt
        target: /etc/nginx/nginx-selfsigned.crt
      - type: bind
        source: ./nginx/certs/nginx-selfsigned.key
        target: /etc/nginx/nginx-selfsigned.key
    ports:
      - 80:80
      - 443:443
    depends_on:
      - app

  # MONITORING TOOLS (PROMETHEUS & GRAFANA)

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./monitoring/prometheus/prometheus.yml
        target: /etc/prometheus/prometheus.yml
      - type: bind
        source: ./prometheus_data
        target: /prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    ports:
      - '9090:9090'
    expose:
      - 9090

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    ports:
     - '3000:3000'
    volumes:
      - type: bind
        source: ./grafana_data
        target: /var/lib/grafana
